@model Common.Views.MenusView

@{
    ViewBag.Title = "Menu Management";
}

<h2>Create Menu</h2>

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   placeholder = @Html.DisplayNameFor(model => model.Title)
               }
           })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Action, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   placeholder = @Html.DisplayNameFor(model => model.Action)
               }
           })
                @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   placeholder = @Html.DisplayNameFor(model => model.Url)
               }
           })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Submenus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="submenuList" class="col-md-12">
                    <table>
                        <thead></thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div id="addSubmenuContainer" class="col-md-12">

                </div>
                <div class="col-md-12">
                    <a href="javascript:void(0)" id="addNewSubmenu">Add Submenu</a>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuRoles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.MenuRoles, Model.MenuRolesList)
                @*@Html.DropDownListFor(model => model.MenuRoles, Model.MenuRolesList, "Select Role")*@
                <input type="button" value=">>" class="btn, btn-default" id="btnAddAllMenuRoles" />
                <input type="button" value=">" class="btn, btn-default" id="btnAddMenuRole" />
                <input type="button" value="<" class="btn, btn-default" id="btnRemoveMenuRole" />
                <input type="button" value="<<" class="btn, btn-default" id="btnRemoveAllMenuRoles" />
                <select id="MenuRolesSelected" multiple="multiple"></select>
                @Html.ValidationMessageFor(model => model.MenuRoles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" id="btnCreateMenu" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script src="~/Scripts/Custom/MenuManagementScript.js"></script>
}